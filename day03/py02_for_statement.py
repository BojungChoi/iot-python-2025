# py_for_statement.py

# for문 : 프로그래밍의 꽃
# 반복을 처리할 때 사용
# for 변수 in 반복할 값:
#   구문안으로..

# 아래와 출력되는 프로그램을 작성하시오
'''
최대별수 : 4
*
**
***
****
'''
# range() 범위를 생성 클래스
# 마지막수 : max - 1
# range(8) -> range(0, 8)
# range(init, max, add)
# print(range(0, 8, 2)) # 0부터 8까지 2씩증가

# #for i in [0, 1, 2, 3, 4, 5, 6, 7]: # 이 조건이 참인동안 반복...
# for i in range(0, 8, 2):
#     print(i)


# num = int(input('최대별수 : '))

# for i in range(1, num + 1):
#     print('*' * i)

# 구구단
# 2단부터 2x9 ~ 9x9


# 요구사항 : 한줄에 각 단씩 나오도록
# 요구사항2 : x*y값이 항상 두줄씩 표현되도록
# 단 시작을 표시되도록
for x in range (2, 9 + 1): # 2부터 9까지 출력
    # if x == 8: break # 8이 되는 순간 for 문을 종료해줘
    if x == 8 : continue # 8을 무시하고 다음으로 넘겨줘 (8단은 무시하고 9단으로..)

    print(f'{x}단 시작 ')
    for y in range (1, 9 + 1): # y는 1부터 출력 (2 x 1 = 2) 1부터시작하니까.
        # if y == 8: break  # 해당 문은 y쪽이므로 x8 까지만하고 break로 인해 상단 for문으로 다시돌아감. 그러고 다시 해당 for문으로 진입        
        print (f'{x} x {y} = {x * y:2d}', end = '   ') # x * y에 :2d 를 넣는이유 : 출력값이 줄마다 배열이안되어있어서 배열을 맞추기위해 2자리로 맞춰준다. 만약100의자리수가 넘으면 3d를 넣으면되겠지.

    print() # 그냥 한줄 내리기(2단이끝날때 , 3단이 끝날때 .....)



print('구구단 종료 \n\n\n\n')

## 반복문을 빠져나올때 : break
## 반복문에서 특정 조건을 지나칠때 : continue